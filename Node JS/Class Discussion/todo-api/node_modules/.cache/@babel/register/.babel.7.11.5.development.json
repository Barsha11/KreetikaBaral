{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Kritika\\\\git-session\\\\Node JS\\\\Class Discussion\\\\todo-api\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Kritika\\\\git-session\\\\Node JS\\\\Class Discussion\\\\todo-api\",\"filename\":\"C:\\\\Users\\\\Kritika\\\\git-session\\\\Node JS\\\\Class Discussion\\\\todo-api\\\\index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Kritika\\\\git-session\\\\Node JS\\\\Class Discussion\\\\todo-api\",\"plugins\":[{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api",
      "filename": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api\\index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-nullish-coalescing-operator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-chaining",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "exportNamespaceFrom"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _routes = _interopRequireDefault(require(\"./src/routes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//http import garya jastai express import garya\n// const { request, response } = require(\"express\");\n//euta API app jasto banayeko jasle express use garchha\n//app chai aba euat express app bhayo\nconst app = (0, _express.default)();\napp.use(_bodyParser.default.json());\napp.use(_routes.default); //yo function ko kaam - port open bhaisakepachi chai k sisplay garne bhanera console logma aauchha\n\napp.listen(1234, () => {\n  console.log(\"Listening on port 1234\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInVzZSIsImJvZHlQYXJzZXIiLCJqc29uIiwicm91dGVzIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7QUFFQTs7QUFHQTs7OztBQU5BO0FBSUE7QUFJQTtBQUNBO0FBQ0EsTUFBTUEsR0FBRyxHQUFHLHVCQUFaO0FBRUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyxvQkFBV0MsSUFBWCxFQUFSO0FBQ0FILEdBQUcsQ0FBQ0MsR0FBSixDQUFRRyxlQUFSLEUsQ0FFQTs7QUFDQUosR0FBRyxDQUFDSyxNQUFKLENBQVcsSUFBWCxFQUFpQixNQUFNO0FBQ3JCQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx3QkFBWjtBQUNELENBRkQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxLcml0aWthXFxnaXQtc2Vzc2lvblxcTm9kZSBKU1xcQ2xhc3MgRGlzY3Vzc2lvblxcdG9kby1hcGlcXCIsInNvdXJjZXNDb250ZW50IjpbIi8vaHR0cCBpbXBvcnQgZ2FyeWEgamFzdGFpIGV4cHJlc3MgaW1wb3J0IGdhcnlhXHJcbmltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XHJcblxyXG5pbXBvcnQgYm9keVBhcnNlciBmcm9tIFwiYm9keS1wYXJzZXJcIjtcclxuLy8gY29uc3QgeyByZXF1ZXN0LCByZXNwb25zZSB9ID0gcmVxdWlyZShcImV4cHJlc3NcIik7XHJcblxyXG5pbXBvcnQgcm91dGVzIGZyb20gXCIuL3NyYy9yb3V0ZXNcIjtcclxuXHJcbi8vZXV0YSBBUEkgYXBwIGphc3RvIGJhbmF5ZWtvIGphc2xlIGV4cHJlc3MgdXNlIGdhcmNoaGFcclxuLy9hcHAgY2hhaSBhYmEgZXVhdCBleHByZXNzIGFwcCBiaGF5b1xyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcclxuYXBwLnVzZShyb3V0ZXMpO1xyXG5cclxuLy95byBmdW5jdGlvbiBrbyBrYWFtIC0gcG9ydCBvcGVuIGJoYWlzYWtlcGFjaGkgY2hhaSBrIHNpc3BsYXkgZ2FybmUgYmhhbmVyYSBjb25zb2xlIGxvZ21hIGFhdWNoaGFcclxuYXBwLmxpc3RlbigxMjM0LCAoKSA9PiB7XHJcbiAgY29uc29sZS5sb2coXCJMaXN0ZW5pbmcgb24gcG9ydCAxMjM0XCIpO1xyXG59KTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "use",
        "bodyParser",
        "json",
        "routes",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AACA;;AAEA;;AAGA;;;;AANA;AAIA;AAIA;AACA;AACA,MAAMA,GAAG,GAAG,uBAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQC,oBAAWC,IAAX,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQG,eAAR,E,CAEA;;AACAJ,GAAG,CAACK,MAAJ,CAAW,IAAX,EAAiB,MAAM;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,CAFD",
      "sourceRoot": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api\\",
      "sourcesContent": [
        "//http import garya jastai express import garya\r\nimport express from \"express\";\r\n\r\nimport bodyParser from \"body-parser\";\r\n// const { request, response } = require(\"express\");\r\n\r\nimport routes from \"./src/routes\";\r\n\r\n//euta API app jasto banayeko jasle express use garchha\r\n//app chai aba euat express app bhayo\r\nconst app = express();\r\n\r\napp.use(bodyParser.json());\r\napp.use(routes);\r\n\r\n//yo function ko kaam - port open bhaisakepachi chai k sisplay garne bhanera console logma aauchha\r\napp.listen(1234, () => {\r\n  console.log(\"Listening on port 1234\");\r\n});\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1598962341451
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Kritika\\\\git-session\\\\Node JS\\\\Class Discussion\\\\todo-api\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Kritika\\\\git-session\\\\Node JS\\\\Class Discussion\\\\todo-api\",\"filename\":\"C:\\\\Users\\\\Kritika\\\\git-session\\\\Node JS\\\\Class Discussion\\\\todo-api\\\\src\\\\routes.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Kritika\\\\git-session\\\\Node JS\\\\Class Discussion\\\\todo-api\",\"plugins\":[{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api",
      "filename": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api\\src\\routes.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-nullish-coalescing-operator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-chaining",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api\\src\\routes.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "exportNamespaceFrom"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api\\src\\routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api\\src\\",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _express = require(\"express\");\n\nvar _endpoints = require(\"./constants/endpoints\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//file write garna\nconst router = (0, _express.Router)();\nconst usersJsonPath = \"./data/users.json\"; //route banayeko\n\nrouter.get(\"/\", (request, response, next) => {\n  response.json({\n    name: \"todo-api\",\n    version: \"1.0.0\"\n  });\n});\nrouter.get(_endpoints.GET_USERS, (request, response, next) => {\n  const usersJson = require(usersJsonPath);\n\n  response.json(usersJson);\n});\nrouter.get(_endpoints.GET_USER_BY_ID, (request, response, next) => {\n  const userId = +request.params.userId;\n\n  const usersJson = require(usersJsonPath);\n\n  const requestedUser = usersJson.find(user => user.id === userId);\n\n  if (!requestedUser) {\n    response.json({\n      message: \"Cannot find the user with id\" + userId\n    });\n  } //else jastai\n\n\n  response.json(requestedUser);\n});\nrouter.post(_endpoints.CREATE_USER, (request, response, next) => {\n  const params = request.body; // console.log(request.body);\n\n  if (!params.firstName || !params.lastName || !params.phoneNumbers) {\n    response.json({\n      message: \"Insufficient number of arguments supplied\"\n    });\n  }\n\n  if (Array.isArray(params.phoneNumbers)) {\n    response.json({\n      message: \"phoneNumbers should be an array\"\n    });\n  } //id autoincrement ko lagi\n\n\n  const usersJson = require(usersJsonPath);\n\n  const maxId = usersJson.reduce((acc, cur) => {\n    return cur.id > acc ? cur.id : acc;\n  }, 0);\n  const updatedJson = [...usersJson, {\n    id: maxId + 1,\n    ...params\n  }]; //write garna ko lagi\n\n  _fs.default.writeFileSync(usersJsonPath, JSON.stringify(updatedJson, null, 2));\n\n  response.json({\n    message: \"New user added successfully\",\n    data: {\n      id: maxId + 1,\n      ...params\n    }\n  });\n}); //delete ko lagi\n\nrouter.delete(_endpoints.DELETE_USER, (request, response, next) => {\n  const userId = +request.params.userId;\n\n  const usersJson = require(usersJsonPath); //security case le matra ho\n\n\n  const doesUserExist = usersJson.find(user => user.id === userId);\n\n  if (!doesUserExist) {\n    response.json({\n      message: \"Cannot find user with id\" + userId\n    });\n  } //....yaah samma.....security.........\n\n\n  const updatedUsersList = usersJson.filter(user => user.id !== userId);\n\n  _fs.default.writeFileSync(usersJsonPath, JSON.stringify(updatedUsersList, null, 2));\n\n  response.json({\n    message: \"Deleted user with id\" + userId\n  });\n}); //post ko lagi\n\nrouter.put(_endpoints.UPDATE_USER, (request, response, next) => {\n  const userId = +request.params.userId;\n  const params = request.body;\n\n  const usersJson = require(usersJsonPath);\n\n  const updatedJson = usersJson.map(user => {\n    if (user.id === userId) {\n      return { ...user,\n        ...params\n      };\n    }\n\n    return user;\n  });\n\n  _fs.default.writeFileSync(usersJsonPath, JSON.stringify(updatedJson, null, 2));\n\n  response.json({\n    message: \"Updated user with id\" + userId\n  });\n});\nvar _default = router;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "router",
        "usersJsonPath",
        "get",
        "request",
        "response",
        "next",
        "json",
        "name",
        "version",
        "GET_USERS",
        "usersJson",
        "require",
        "GET_USER_BY_ID",
        "userId",
        "params",
        "requestedUser",
        "find",
        "user",
        "id",
        "message",
        "post",
        "CREATE_USER",
        "body",
        "firstName",
        "lastName",
        "phoneNumbers",
        "Array",
        "isArray",
        "maxId",
        "reduce",
        "acc",
        "cur",
        "updatedJson",
        "fs",
        "writeFileSync",
        "JSON",
        "stringify",
        "data",
        "delete",
        "DELETE_USER",
        "doesUserExist",
        "updatedUsersList",
        "filter",
        "put",
        "UPDATE_USER",
        "map"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api\\src\\",
      "sourcesContent": [
        "//file write garna\r\nimport fs from \"fs\";\r\nimport { Router } from \"express\";\r\n\r\nimport {\r\n  GET_USERS,\r\n  GET_USER_BY_ID,\r\n  CREATE_USER,\r\n  DELETE_USER,\r\n  UPDATE_USER,\r\n} from \"./constants/endpoints\";\r\n\r\nconst router = Router();\r\n\r\nconst usersJsonPath = \"./data/users.json\";\r\n\r\n//route banayeko\r\nrouter.get(\"/\", (request, response, next) => {\r\n  response.json({\r\n    name: \"todo-api\",\r\n    version: \"1.0.0\",\r\n  });\r\n});\r\n\r\nrouter.get(GET_USERS, (request, response, next) => {\r\n  const usersJson = require(usersJsonPath);\r\n\r\n  response.json(usersJson);\r\n});\r\n\r\nrouter.get(GET_USER_BY_ID, (request, response, next) => {\r\n  const userId = +request.params.userId;\r\n\r\n  const usersJson = require(usersJsonPath);\r\n\r\n  const requestedUser = usersJson.find((user) => user.id === userId);\r\n\r\n  if (!requestedUser) {\r\n    response.json({\r\n      message: \"Cannot find the user with id\" + userId,\r\n    });\r\n  }\r\n  //else jastai\r\n  response.json(requestedUser);\r\n});\r\n\r\nrouter.post(CREATE_USER, (request, response, next) => {\r\n  const params = request.body;\r\n  // console.log(request.body);\r\n\r\n  if (!params.firstName || !params.lastName || !params.phoneNumbers) {\r\n    response.json({\r\n      message: \"Insufficient number of arguments supplied\",\r\n    });\r\n  }\r\n\r\n  if (Array.isArray(params.phoneNumbers)) {\r\n    response.json({\r\n      message: \"phoneNumbers should be an array\",\r\n    });\r\n  }\r\n\r\n  //id autoincrement ko lagi\r\n  const usersJson = require(usersJsonPath);\r\n  const maxId = usersJson.reduce((acc, cur) => {\r\n    return cur.id > acc ? cur.id : acc;\r\n  }, 0);\r\n\r\n  const updatedJson = [\r\n    ...usersJson,\r\n    {\r\n      id: maxId + 1,\r\n      ...params,\r\n    },\r\n  ];\r\n\r\n  //write garna ko lagi\r\n  fs.writeFileSync(usersJsonPath, JSON.stringify(updatedJson, null, 2));\r\n\r\n  response.json({\r\n    message: \"New user added successfully\",\r\n    data: {\r\n      id: maxId + 1,\r\n      ...params,\r\n    },\r\n  });\r\n});\r\n\r\n//delete ko lagi\r\nrouter.delete(DELETE_USER, (request, response, next) => {\r\n  const userId = +request.params.userId;\r\n  const usersJson = require(usersJsonPath);\r\n\r\n  //security case le matra ho\r\n  const doesUserExist = usersJson.find((user) => user.id === userId);\r\n\r\n  if (!doesUserExist) {\r\n    response.json({\r\n      message: \"Cannot find user with id\" + userId,\r\n    });\r\n  }\r\n  //....yaah samma.....security.........\r\n\r\n  const updatedUsersList = usersJson.filter((user) => user.id !== userId);\r\n\r\n  fs.writeFileSync(usersJsonPath, JSON.stringify(updatedUsersList, null, 2));\r\n\r\n  response.json({\r\n    message: \"Deleted user with id\" + userId,\r\n  });\r\n});\r\n\r\n//post ko lagi\r\nrouter.put(UPDATE_USER, (request, response, next) => {\r\n  const userId = +request.params.userId;\r\n  const params = request.body;\r\n\r\n  const usersJson = require(usersJsonPath);\r\n  const updatedJson = usersJson.map((user) => {\r\n    if (user.id === userId) {\r\n      return {\r\n        ...user,\r\n        ...params,\r\n      };\r\n    }\r\n    return user;\r\n  });\r\n  fs.writeFileSync(usersJsonPath, JSON.stringify(updatedJson, null, 2));\r\n\r\n  response.json({\r\n    message: \"Updated user with id\" + userId,\r\n  });\r\n});\r\n\r\nexport default router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1598962707779
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Kritika\\\\git-session\\\\Node JS\\\\Class Discussion\\\\todo-api\\\\src\\\\constants\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Kritika\\\\git-session\\\\Node JS\\\\Class Discussion\\\\todo-api\",\"filename\":\"C:\\\\Users\\\\Kritika\\\\git-session\\\\Node JS\\\\Class Discussion\\\\todo-api\\\\src\\\\constants\\\\endpoints.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Kritika\\\\git-session\\\\Node JS\\\\Class Discussion\\\\todo-api\",\"plugins\":[{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api\\src\\constants\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api",
      "filename": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api\\src\\constants\\endpoints.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-nullish-coalescing-operator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-chaining",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api\\src\\constants\\endpoints.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "exportNamespaceFrom"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api\\src\\constants\\endpoints.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api\\src\\constants\\",
        "sourceFileName": "endpoints.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UPDATE_USER = exports.DELETE_USER = exports.CREATE_USER = exports.GET_USER_BY_ID = exports.GET_USERS = void 0;\nconst GET_USERS = '/users';\nexports.GET_USERS = GET_USERS;\nconst GET_USER_BY_ID = '/users/:userId';\nexports.GET_USER_BY_ID = GET_USER_BY_ID;\nconst CREATE_USER = '/users';\nexports.CREATE_USER = CREATE_USER;\nconst DELETE_USER = '/users/:userId';\nexports.DELETE_USER = DELETE_USER;\nconst UPDATE_USER = '/users/:userId';\nexports.UPDATE_USER = UPDATE_USER;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVuZHBvaW50cy5qcyJdLCJuYW1lcyI6WyJHRVRfVVNFUlMiLCJHRVRfVVNFUl9CWV9JRCIsIkNSRUFURV9VU0VSIiwiREVMRVRFX1VTRVIiLCJVUERBVEVfVVNFUiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sTUFBTUEsU0FBUyxHQUFHLFFBQWxCOztBQUNBLE1BQU1DLGNBQWMsR0FBRyxnQkFBdkI7O0FBQ0EsTUFBTUMsV0FBVyxHQUFHLFFBQXBCOztBQUNBLE1BQU1DLFdBQVcsR0FBRyxnQkFBcEI7O0FBQ0EsTUFBTUMsV0FBVyxHQUFHLGdCQUFwQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEtyaXRpa2FcXGdpdC1zZXNzaW9uXFxOb2RlIEpTXFxDbGFzcyBEaXNjdXNzaW9uXFx0b2RvLWFwaVxcc3JjXFxjb25zdGFudHNcXCIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBHRVRfVVNFUlMgPSAnL3VzZXJzJztcclxuZXhwb3J0IGNvbnN0IEdFVF9VU0VSX0JZX0lEID0gJy91c2Vycy86dXNlcklkJztcclxuZXhwb3J0IGNvbnN0IENSRUFURV9VU0VSID0gJy91c2Vycyc7XHJcbmV4cG9ydCBjb25zdCBERUxFVEVfVVNFUiA9ICcvdXNlcnMvOnVzZXJJZCc7XHJcbmV4cG9ydCBjb25zdCBVUERBVEVfVVNFUiA9ICcvdXNlcnMvOnVzZXJJZCc7Il19",
    "map": {
      "version": 3,
      "sources": [
        "endpoints.js"
      ],
      "names": [
        "GET_USERS",
        "GET_USER_BY_ID",
        "CREATE_USER",
        "DELETE_USER",
        "UPDATE_USER"
      ],
      "mappings": ";;;;;;AAAO,MAAMA,SAAS,GAAG,QAAlB;;AACA,MAAMC,cAAc,GAAG,gBAAvB;;AACA,MAAMC,WAAW,GAAG,QAApB;;AACA,MAAMC,WAAW,GAAG,gBAApB;;AACA,MAAMC,WAAW,GAAG,gBAApB",
      "sourceRoot": "C:\\Users\\Kritika\\git-session\\Node JS\\Class Discussion\\todo-api\\src\\constants\\",
      "sourcesContent": [
        "export const GET_USERS = '/users';\r\nexport const GET_USER_BY_ID = '/users/:userId';\r\nexport const CREATE_USER = '/users';\r\nexport const DELETE_USER = '/users/:userId';\r\nexport const UPDATE_USER = '/users/:userId';"
      ]
    },
    "sourceType": "script",
    "mtime": 1598962538267
  }
}